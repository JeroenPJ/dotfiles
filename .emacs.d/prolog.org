* Prolog & logic programming
#+BEGIN_SRC emacs-lisp
  (push "~/.emacs.d/lisp/" load-path)

  (autoload 'run-prolog "prolog" "Start a Prolog sub-process." t)
  (autoload 'prolog-mode "prolog" "Major mode for editing Prolog programs." t)

  (setq prolog-system 'swi
        prolog-program-name '((swi "swipl")
                              (gnu "gprolog"))
        prolog-program-switches '((swi ("-G128M" "-T128M" "-L128M" "-O"))
                                  (t nil))
        prolog-help-function-i 'swi-browse
        prolog-hungry-delete-key-flag t
        prolog-indent-width 2
        prolog-paren-indent 2
        prolog-electric-if-then-else-flag t
        prolog-electric-tab-flag nil
        prolog-electric-dot-flag nil)

  (defun swi-browse (pred)
    (interactive)
    (message pred)
    (browse-url
     (concat "http://localhost:3040/pldoc/search?for=" pred)))

  (dolist (x '(("\\.pl\\'"  . prolog-mode)
               ("\\.chr\\'" . prolog-mode) ; constraint handling
               ("\\.yap\\'" . prolog-mode)
               ("\\.P\\'"   . prolog-mode)
               ("\\.pro\\'" . prolog-mode)))
    (push x auto-mode-alist))

  ;; (use-package ediprolog
  ;;   :config
  ;;   (define-key prolog-mode-map (kbd "C-<return>") 'ediprolog-dwim))
#+END_SRC
